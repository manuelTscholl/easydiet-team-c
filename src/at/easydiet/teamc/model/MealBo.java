package at.easydiet.teamc.model;

// Generated 02.04.2011 00:41:04 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import at.easydiet.dao.DAOFactory;
import at.easydiet.model.DietParameter;
import at.easydiet.model.Meal;
import at.easydiet.model.MealLine;
import at.easydiet.model.ParameterDefinitionUnit;
import at.easydiet.teamc.model.data.DietParameterData;
import at.easydiet.teamc.model.data.MealCodeData;
import at.easydiet.teamc.model.data.MealData;
import at.easydiet.teamc.model.data.MealLineData;

/**
 * MealBo generated by hbm2java
 */
public class MealBo implements java.io.Serializable, Saveable, MealData,
		MealCodeData {

	private Meal _meal;
	// TODO q&d implementation of standardparameterdefinitionunit mg/100g
	private static ParameterDefinitionUnit _unit;

	private MealBo() {
	}

	public MealBo(Meal meal) {
		this._meal = meal;
	}

	public MealBo(String code, String name, TimeSpanBo timeSpanBo) {
		this(new Meal(code, name, timeSpanBo.getTimeSpan()));
	}

	public MealBo(String code, String name,
			Set<DietParameterBo> dietParameters, Set<MealLineBo> mealLines,
			TimeSpanBo timeSpanBo) {
		this(code, name, timeSpanBo);

		for (DietParameterBo dietParameterBo : dietParameters) {
			this._meal.getDietParameters().add(
					dietParameterBo.getDietParameter());
		}

		for (MealLineBo mealLineBo : mealLines) {
			this._meal.getMealLines().add(mealLineBo.getMealLine());
		}

	}

	@Override
	public long getMealId() {
		return this.getMeal().getMealId();
	}

	public void setMealId(long mealId) {
		this.getMeal().setMealId(mealId);
	}

	@Override
	public String getCode() {
		return this.getMeal().getCode();
	}

	public void setCode(String code) {
		this.getMeal().setCode(code);
	}

	@Override
	public String getName() {
		return this.getMeal().getName();
	}

	public void setName(String name) {
		this.getMeal().setName(name);
	}

	public Set<DietParameterBo> getDietParameters() {
		Set<DietParameterBo> temp = new HashSet<DietParameterBo>(this._meal
				.getDietParameters().size());
		for (DietParameter dietParameter : this._meal.getDietParameters()) {
			temp.add(new DietParameterBo(dietParameter));
		}
		return temp;
	}

	public void setDietParameters(Set<DietParameterBo> dietParametersBo) {
		for (DietParameterBo dietParameterBo : dietParametersBo) {
			this._meal.getDietParameters().add(
					dietParameterBo.getDietParameter());
		}
	}

	public Set<MealLineBo> getMealLines() {
		Set<MealLineBo> temp = new HashSet<MealLineBo>(this._meal
				.getMealLines().size());
		for (MealLine mealLine : this._meal.getMealLines()) {
			temp.add(new MealLineBo(mealLine));
		}
		return temp;
	}
	
	public void removeMealLine(MealLineBo mealLine)
	{
	    if(_meal.getMealLines().contains(mealLine.getMealLine()))
	    {
	        _meal.getMealLines().remove(mealLine.getMealLine());
	    }
	}
	
	public List<MealLineBo> getMealLinesAsList()
	{
	    return new ArrayList<MealLineBo>(getMealLines());
	}

	public void setMealLines(Set<MealLineBo> mealLinesBo) {
		for (MealLineBo mealLineBo : mealLinesBo) {
			this._meal.getMealLines().add(mealLineBo.getMealLine());
		}
	}
	
	   public void setMealLine(MealLineBo mealLineBo) {
	            this._meal.getMealLines().add(mealLineBo.getMealLine());	        
	    }


	/**
	 * @return the _meal
	 */
	protected Meal getMeal() {
		return _meal;
	}

	/**
	 * @param Meal the _meal to set
	 */
	public void setMeal(Meal Meal) {
		this._meal = Meal;
	}

	@Override
	public boolean save() {
		if (DAOFactory.getInstance().getMealDAO().makePersistent(this._meal) != null) {
			return true;
		}
		return false;
	}

	@Override
	public MealCodeData getMealCodeData() {
		return this;
	}

	@Override
	public Set<DietParameterData> getDietParameterData() {
		Set<DietParameterData> dpd = new HashSet<DietParameterData>();
		Set<DietParameterBo> dpb = this.getDietParameters();
		for (DietParameterBo dietParameterBo : dpb) {
			dpd.add(dietParameterBo);
		}
		return dpd;
	}

	@Override
	public Set<MealLineData> getMealLineData() {
		Set<MealLineData> mld = new HashSet<MealLineData>();
		Set<MealLineBo> mlb = this.getMealLines();
		for (MealLineBo mealline : mlb) {
			mld.add(mealline);
		}
		return mld;
	}

	/**
	 * Adds a new MealLine to this instance of MealBo with creating a new
	 * MealLineBo and adding the line to the _meal object
	 */
	public int addMealLine() {
		// add a new MealLineBo to the existing lines
		MealLineBo newLine = new MealLineBo(new MealLine());
		this._meal.getMealLines().add(newLine.getMealLine());
		// get the current mealLineIndex
		int mealLineIndex = _meal.getMealLines().size() - 1;
		return mealLineIndex;

	}

	public MealData addRecipe(RecipeBo recipeBo, float quantity, int mealLineID) {

		
		if (this.getMealLines().size() > 0) {
			MealLineBo mlb = (MealLineBo) this.getMealLines().toArray()[mealLineID];
			if (mlb.getRecipe() == null) {
				mlb.setRecipe(recipeBo);
				mlb.setQuantity(quantity);
			} else {
				mlb.addMealLine(new MealLineBo(quantity, recipeBo, null, mlb,
						this));
			}
		}else{
			this.getMealLines().add(new MealLineBo(quantity, recipeBo, null, null,
						this));
		}

		return this;
	}

	/**
	 * used to get the standard parameterdefinitionunit
	 * 
	 * @return
	 */
	private ParameterDefinitionUnit getUnitDefaultValue() {// FIX quick and
															// dirty --> should
															// be
															// ParameterDefinitionUnitBo
		if (_unit != null) {
			return _unit;
		}
		List<ParameterDefinitionUnit> definitions = DAOFactory.getInstance()
				.getParameterDefinitionUnitDAO().findAll();
		if (definitions != null)
			for (ParameterDefinitionUnit parameterDefinitionUnit : definitions) {
				if (parameterDefinitionUnit.getName().equals("mg/100g")) {
					_unit = parameterDefinitionUnit;
					return _unit;

				}
			}
		return null;
	}

}
